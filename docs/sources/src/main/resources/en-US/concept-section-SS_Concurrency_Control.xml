<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Servlets_Server_User_Guide.ent">
%BOOK_ENTITIES;
]>
<!-- chapter id nickname: sscacc -->
<section id="sscacc-MSS_Concurrency_Control">
  <title>Concurrency Control</title>
  <para>Concurrency Control mode tuning affects the way in which
  the SIP Servlets Server processes This parameter can be set using the following methods: </para>
  <para><itemizedlist>
      <listitem>
        <para>Through the SIP Servlets Management Console.</para>
      </listitem>
      <listitem>
        <para>Editing
  the server&apos;s <filename>server.xml</filename> configuration file.</para>
      </listitem>
      <listitem>
        <para>From the
  <literal>dispatcher</literal> MBean.</para>
      </listitem>
      <listitem>
        <para>From the Embedded Jopr integrated
  management platform.</para>
      </listitem>
    </itemizedlist></para>
  <formalpara>
    <title>Concurrency Control</title>
    <para>The JSR 289 expert group does not specify how concurrency control should be implemented.  </para>
  </formalpara>
  <para>&PLATFORM_NAME; SIP Servlets for JBoss and &PLATFORM_NAME; SIP Servlets for Tomcat have concurrency control implemented as
    a configurable mode, which defines the way in which the SIP Servlets Server processes messages.</para>
    <para>It has to be noted that this concurrency control mechanism is not cluster aware and will work per node only, it is not a cluster wide lock.</para> 
    <para>The following modes are provided, and cater for the particular setup required in an implementation:</para>
  <variablelist>
    <varlistentry>
      <term>None</term>
      <listitem>
        <para>All SIP messages are processed as soon as possible in a thread
        from the global thread pool.</para>
        <para>When two messages
        belong to the same <literal>SipSession</literal>, they can be concurrently processed. Ensure that SIP Messages that access shared resources (such as the session attribute) concurrently are synchronized in a
        thread-safe manner.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Transaction</term>
      <listitem>
        <para>Bypass the SIP Servlets request/response executors, and utilize the JAIN SIP built-in Transaction serialization to manage race conditions on the same transaction.</para>
        <para>By default, the SIP Servlets server uses a ThreadPoolExecutor linked to a LinkedBlockingQueue to dispatch the request/response threads. The container can thus handles two different response (for example a 180 Ringing and a 200 OK) concurrently, a race condition can occur where the second response overtakes the first one (200 OK dispatched to the application before the 180 Ringing).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>SipSession</term>
      <listitem>
        <para>SIP messages are processed as soon as possible except for messages originating from the same <literal>SipSession</literal>. These messages are excluded from any simultaneous processing. </para>
        <para>Messages from the same
        <literal>SipSession</literal> are processed sequentially, in the order they  originally arrived. </para>
        <para>Two (or more) messages from different
        <literal>SipSession</literal> instances in the same
        <literal>SipApplicationSession</literal> may be processed
        simultaneously. For this reason, ensure that SIP Messages that access shared resources (such as the session attribute) concurrently  are synchronized in a
        thread-safe manner. </para>
        <para>Thread-safety is particularly important in Back-to-Back User Agent (B2BUA) cases,  where each communication leg of the
        B2BUA consists of a different <literal>SipSession</literal> in the
        same <literal>SipApplicationSession</literal>.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>SipApplicationSession</term>
      <listitem>
        <para>SIP messages are processed as soon as possible, with the
        guarantee that no two messages from the same
        <literal>SipSession</literal> <emphasis>or</emphasis> from the same
        <literal>SipApplicationSession</literal> will ever be processed
        simultaneously.  Of all the available methods, this mode is the best choice for guaranteed  thread-safety. </para>
        <para>If applications  access shared resources in an unmanaged
        way (for example,  by accessing a <literal>SipSession</literal> attribute
        from an unmanaged thread, or from an Enterprise JavaBean) access will not be synchronized.</para>
      </listitem>
    </varlistentry>
  </variablelist>
  <formalpara id="sscacc-Configuring_the_Concurrency_Control_Settings">
    <title>Configuring the Concurrency Control Settings</title>
    <para>The concurrency control settings can be configured
    through the SIP Servlets Management Console, using the following methods: </para>
  </formalpara>
  <para><itemizedlist>
      <listitem>
        <para>Through the SIP Servlets Management Console.</para>
      </listitem>
      <listitem>
        <para>Editing
  the server&apos;s <filename>server.xml</filename> configuration file.</para>
      </listitem>
      <listitem>
        <para>From the
  <literal>dispatcher</literal> MBean.</para>
      </listitem>
      <listitem>
        <para>From the Embedded Jopr integrated
  management platform.</para>
      </listitem>
    </itemizedlist></para>
  <variablelist>
    <varlistentry>
      <term>Tuning Parameters with the SIP Servlets Management Console</term>
      <listitem>
        <para>The easiest way to configure the <guilabel>Concurrency Control Mode</guilabel>
        parameter is to open the <literal>SIP Servlets Management Console</literal> in your browser (by going to <ulink url="http://localhost:8080/sip-servlets-management"/>), making
        your changes, and then clicking <guibutton>Apply</guibutton>. </para>
        <figure>
          <title>SIP Servlets Management Console Concurrency Control Tuning Parameters</title>
          <mediaobject id="sscacc-sas-MSSSManagementConsole-ss-ServerSettings-1">
            <imageobject>
              <imagedata width="440" align="center" fileref="images/mss-MSSSManagementConsole-ss-ServerSettings.png" format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>
        <important>
          <title>Persistent Settings</title>
          <para>Concurrency control settings altered through the SIP Servlets Management Console are not saved to the <filename>server.xml</filename> configuration file.  </para>
          <para>To make settings persistent, append the settings to  the <filename>server.xml</filename> file directly.  </para>
        </important>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Tuning Parameters Permanently by Editing <filename>server.xml</filename></term>
      <listitem>
        <para>Alternatively, you can edit your server&apos;s
        <filename>server.xml</filename> configuration file, which has the
        benefit of making your chosen settings changes permanent. Instructions
        follow, grouped by the SIP Servlets Server you are running:</para>
        <procedure>
          <title>Tuning &PLATFORM_NAME; SIP Servlets for JBoss Server Settings for Concurrency Control</title>
          <step>
            <title>Open server.xml File</title>
            <para>Open the
            <filename><envar>$JBOSS_HOME</envar>/server/default/deploy/jboss-web.deployer/server.xml</filename>
            configuration file in a text editor.</para>
          </step>
          <step>
            <title>Add Parameters to &lt;service&gt; Element</title>
            <para>Locate the <markup>&lt;service&gt;</markup> element, and add the
            <literal>concurrencyControlMode</literal> and/or 
            <literal>sipMessageQueueSize</literal> attributes.</para>
            <example id="sscacc-MSSJ-Permanently_Changing_Tunable_Parameters_by_Editing_server.xml">
              <title>server.xml Concurrency Control Attributes</title>
              <programlisting role="XML">&lt;Service
 name=&quot;jboss.web&quot;
 className=&quot;org.mobicents.servlet.sip.startup.SipStandardService&quot;
 sipApplicationDispatcherClassName=&quot;org.mobicents.servlet.sip.core.SipApplicationDispatcherImpl&quot;
 usePrettyEncoding=&quot;false&quot;
 sipStackPropertiesFile=&quot;conf/mss-sip-stack.properties&quot;
 darConfigurationFileLocation=&quot;conf/dars/mobicents-dar.properties&quot;
 concurrencyControlMode=&quot;SipApplicationSession&quot;
 </programlisting>
            </example>
            <para>Possible values for the
            <literal>concurrencyControlMode</literal> attribute include:
            <replaceable>None</replaceable>,
            <replaceable>SipSession</replaceable> or
            <replaceable>SipApplicationSession</replaceable>.
            <replaceable>SipSession</replaceable> is the value of this
            attribute when it is not present—and overridden—in
            <filename>server.xml</filename>.</para>
          </step>          
        </procedure>
        <procedure>
          <title>Tuning &PLATFORM_NAME; SIP Servlets for Tomcat Server Settings for Concurrency Control</title>
          <step>
            <title>Open server.xml File</title>
            <para>Open the
            <filename><envar>$CATALINA_HOME</envar>/conf/server.xml</filename>
            configuration file in your text editor.</para>
          </step>
          <step>
            <title>Add Parameters to &lt;service&gt; Element</title>
            <para>Locate the <markup>&lt;service&gt;</markup> element, and add the
            <literal>concurrencyControlMode</literal> and/or 
            <literal>sipMessageQueueSize</literal> attributes.</para>
            <para>Possible values for the
            <literal>concurrencyControlMode</literal> attribute include:
            <replaceable>None</replaceable>,
            <replaceable>SipSession</replaceable> or
            <replaceable>SipApplicationSession</replaceable>.
            <replaceable>SipSession</replaceable> is the value of this
            attribute when it is not present—and overridden—in
            <filename>server.xml</filename>.</para>
          </step>          
        </procedure>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Tuning Parameters from the dispatcher MBean</term>
      <listitem>
        <para>Navigate to the <literal>dispatcher</literal> MBean from
        &PLATFORM_NAME; SIP Servlets for JBoss&apos;s JMX console. </para>
        <para>All changes performed
        at run time are effective immediately, but do not persist across
        reboots.  As with JBoss and Tomcat, the   <filename>server.xml</filename> must be appended with the settings in order to make the configuration persistent.</para>
        <para>When editing the <literal>dispatcher</literal> MBean from
        &PLATFORM_NAME; SIP Servlets for JBoss&apos;s JMX console, values allowed for the
        concurrency control mode are <userinput>None</userinput>,
        <userinput>SipSession</userinput> or
        <userinput>SipApplicationSession</userinput>.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Tuning Parameters from Enterprise Monitoring and Managent Console</term>
      <listitem>
        <para>If  the Enterprise Monitoring and Managenemt console is installed as described in <xref linkend="emom-Enterprise-Monitoring-Operations-Management"/>, the tunable parameters can be altered by  following the instructions  in <xref linkend="emom-Embedded-Jopr"/> or <xref linkend="emom-Jopr4Production"/></para>
      </listitem>
    </varlistentry>
  </variablelist>
</section>

